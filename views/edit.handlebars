<!DOCTYPE html>
<html lang="en">

<head>
    <title>Remindr</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="/main.css" />
</head>
<body>
    {{> navbar-landing-page}}

    <div class="modal-fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Edit Reminder</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>        
          </div>
          <div class="modal-body fadeIn">
                <form action="/edit-reminder" method="POST">
                    <div class="form-group">
                        <input name="editReminderID" type="hidden" value="{{reminder._id}}">
                        <input type="text" class="form-control" name="name" placeholder="Reminder Title" value="{{reminder.name}}">
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control" name="description" placeholder="Description" value="{{reminder.description}}">
                    </div>
                    <ul class='list-group' id="subtaskListEdit">
                        {{#each reminder.subtasks}}
                            <li class="existingSubtasks wordWrap list-group-item">
                                {{description}}
                                <button type="button" class="deleteSubtask btn btn-secondary float-right">Delete</button>
                            </li>
                        {{/each}}
                    </ul>
                    <input type="hidden" id="subtaskHiddenEdit" name="subtaskHiddenEdit">
                    <div class="form-group">
                        <input type="text" class="form-control" name="subtasksEdit" placeholder="New Subtask" id="newSubtaskEdit">
                        <button type="button" onclick="addSubtask()">Add</button>
                    </div>

                    <div class='list-group' id="tagList">
                    </div>
                    <input type="hidden" id="tagHiddenEdit" name="tagHiddenEdit">
                    <div class="form-group" id="tag-container">
                        <input type="text" class="form-control" name="tags" placeholder="New Tag" id="newTag">
                         <button type="button" onclick="addTag()">Add</button>
                    </div>

                    <div class="form-check">
                        <p id="existingDate"hidden>{{reminder.date}}</p>
                        <label for="pickDate">Remind Me At:</label>
                        <input class="form-control" type="datetime-local" id="pickDate"
                               name="pickDate">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Edits</button>
                    </div>
                </form>
            </div>
        </div>
      </div>
    </div>

    <script
          src="https://code.jquery.com/jquery-3.4.1.min.js"
          integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
          crossorigin="anonymous">
    </script>

    <script>
        let subtaskArray = [];
        let subtaskHidden = document.getElementById("subtaskHiddenEdit");

        // get the ul element
        let subtaskList = document.getElementById("subtaskListEdit");

        // Populate the existing subtasks into the array
        let existingSubtasks = subtaskList.getElementsByClassName("existingSubtasks");
        for (let i = 0; i < existingSubtasks.length; i++) {
            let description = existingSubtasks[i].innerText.replace("Delete", "");
            let newSubtask = {completed: false, description: description};
            // add it to the array of subtask objects
            subtaskArray.push(newSubtask);

            // save it to the hidden input that will be eventually sent to router.js as a json string
            subtaskHidden.value = JSON.stringify(subtaskArray);            
        }

        let dateObj = new Date(document.getElementById("existingDate").innerHTML);

        document.getElementById("pickDate").value = dateObj.toISOString().substring(0, 10) + "T" + dateObj.getHours() + ":" + dateObj.getMinutes();
        
        $(document).ready(function() {            
            // disable enter button submitting form for every text input
            $(document).on("keypress", 'form', function (e) {
                var code = e.keyCode || e.which;
                if (code == 13) {
                    e.preventDefault();
                    return false;
                }
            });
            // handle delete for existing subtasks
            $('.deleteSubtask').click(function() {
                let description = $(this).parent()[0].innerText.replace("Delete", "");
                subtaskList.removeChild($(this).parent()[0]);  
                subtaskArray = subtaskArray.filter(function(obj) {
                    return obj.description !== description;
                });
                subtaskHidden.value = JSON.stringify(subtaskArray);
            });

        });

        // upon clicking add subtask button...
        function addSubtask(){
            let description = document.getElementById("newSubtaskEdit").value;
            let newSubtask = {completed: false, description: description};
            
            // add it to the array of subtask objects
            subtaskArray.push(newSubtask);

            // display it as a list on the html page
            subtaskDisplay(description); 

            // save it to the hidden input that will be eventually sent to router.js as a json string
            subtaskHidden.value = JSON.stringify(subtaskArray);

            // clearing out the previous input
            document.getElementById("newSubtaskEdit").value = "";
        }

        // display the list of subtasks that have been entered
        function subtaskDisplay(description) {
            // create an li element
            let li = document.createElement("li");
            li.setAttribute("class", "wordWrap list-group-item");       

            // add the description text to the li element
            li.appendChild(document.createTextNode(description));

            // append a delete button to the right side
            let deleteBtn = document.createElement("button");
            deleteBtn.type = "button";
            deleteBtn.setAttribute("class", "btn btn-secondary float-right");
            
            // when delete is clicked, remove from the html li, the subtaskArray, and also the subtaskHidden input
            deleteBtn.onclick = function() {
                subtaskList.removeChild(li);
                subtaskArray = subtaskArray.filter(function( obj ) {
                  return obj.description !== description;
                });
                subtaskHidden.value = JSON.stringify(subtaskArray);
            }
            deleteBtn.innerHTML = "Delete";
            li.appendChild(deleteBtn);

            subtaskList.appendChild(li);
        }
    </script>
</body>
</html>