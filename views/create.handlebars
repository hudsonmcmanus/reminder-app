<!DOCTYPE html>
<html lang="en">

<head>
	<title>Remindr: An Everyday Use App!</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css" />
	<link rel="stylesheet" type="text/css" href="/main.css" />
    <link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"/>
    <style>
        #tempDiv{
            display: none;
        }
    </style>
</head>

<body>
	{{> navbar-landing-page}}

	<div class="modal-fade fadeIn" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" class="reminder">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content modal-fluid">
            <div class="modal-header">
                <h5 class="modal-title">Create New Reminder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" onclick="redirect()">&times;</span>
                </button>
            </div>
            <div class="modal-body fadeIn">
                {{#if error}}
					<b>{{error}}</b>
				{{/if}}
                <form id="reminderForm" action="/create" method="POST">
                    <div class="form-group">
                    <!--Get the title, description and date and time-->
                    <div class="form-group">
                        <input type="text" class="form-control" name="name" placeholder="Reminder Title" required>
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control" name="description" placeholder="Description">
                    </div>
                    <ul class='list-group' id="subtaskList">
                    </ul>
                    <input type="hidden" id="subtaskHidden" name="subtaskHidden">
                    <div class="form-group">
                        <input type="text" class="form-control" name="subtasks" placeholder="New Subtask" id="newSubtask">
                        <button type="button" class="btn btn-success" onclick="addSubtask()">Add</button>
                    </div>

                    <div id="tagList">
                    </div>
                    <input type="hidden" id="tagHidden" name="tagHidden">
                    <div class="form-group" id="tag-container">
                        <input type="text" class="form-control" name="tags" placeholder="New Tag" id="newTag">
                         <button type="button" class="btn btn-success" onclick="addTag()">Add</button>
                    </div>

                    <div class="form-group">
                        <label for="selectDate">Remind Me At:</label>
                        <input class="form-control" type="datetime-local" id="selectDate"
                               name="selectDate" onchange="dateChange()" required>
                        <button type="button" id= "weatherBtn" style="border: 1px solid #e8e6e6;" onclick="dateChange()" >ðŸŒ‚BRING AN UMBRELLA</button>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="redirect()">Close</button>
                        <button type="submit" id="submitForm" class="btn btn-primary">Submit</button>
                    </div>
                    </div>
                </form>
            </div>
        </div>
        </div>
    </div>
    <div id="tempDiv">
        <table class="table table-bordered"> 
          <tr>
              <th scope="col">Day</th>
              <th scope="col"> Average Tempurate (Â°C)</th>
          </tr>
          <tr>
              <td scope="row">Today</td>
              <td scope="row" id="day0Box"></td>
          </tr>
          <tr>
              <td scope="row">Tomorrow</td>
                <td scope="row" id="day1Box"></td>
          </tr>
          <tr>
              <td scope="row">2 days after today</td>
              <td id="day2Box" scope="row"></td>
          </tr>
          <tr>
              <td scope="row">3 days after today</td>
              <td id="day3Box" scope="row"></td>
          </tr>
          <tr>
              <td scope="row">4 days after today</td>
              <td id="day4Box" scope="row"></td>
          </tr>
          <tr>
              <td scope="row">5 days after today</td>
              <td id="day5Box" scope="row"></td>
          </tr>
          <tr>
              <td scope="row">6 days after today</td>
              <td id="day6Box" scope="row"></td>
          </tr>
          <tr>
              <td scope="row">7 days after today</td>
              <td id="day7Box" scope="row"></td>
          </tr>
      </table>
    </div>
    <p><a href="https://darksky.net/poweredby/" class="badge badge-secondary" style="text-align: center;">Powered by Dark Sky</a></p>

    <script
      src="https://code.jquery.com/jquery-3.4.1.min.js"
      integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
      crossorigin="anonymous"></script>
    <script src="/bootstrap/js/bootstrap.min.js"></script>
    <script src="/js/create.js"></script>
    <script>
    // ++++++++++++++++++++++++++++++++  Weather  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    //get the userlocation while open the page
    // get the date user inputted, this date can change with the input of the user

        function dateChange(){
            let datePicked = document.getElementById('selectDate').value.substring(0, 10);

            //convert this date to unix time
            let strTime = datePicked;
            let weather_date = new Date(strTime.replace(/-/g, '/'));
            // convert a date string to unix time
            let unix_time = Date.parse(weather_date);
            // format unix time from ms to second for Darksky API use 
            let strUnix = unix_time.toString().slice(0,10);
            const numUnix = parseInt(strUnix);

            // get userlocation
            navigator.geolocation.getCurrentPosition(function(position){
                    userLatitude = position.coords.latitude
                    userLongitude = position.coords.longitude
                    // get weather forcast on specific day and specific location
                    forcast(userLatitude,userLongitude,numUnix);
                    // get tempforcast
                    tempForcast(userLatitude, userLongitude);
            })
        }

        // get the forcast information from darksky API
        function forcast(latitude, longitude, time){
            const proxy = 'https://cors-anywhere.herokuapp.com/'
            const api = proxy+'https://api.darksky.net/forecast/5cdbb6801362ee38b81b258430c5f51c/'+latitude+","+longitude+","+time;

            fetch(api)
                .then(res =>{
                    //put result in json object
                    return res.json();
                })
                .then(data =>{
                    // [summary]
                    // day 0
                    const day0 = data.daily.data[0].icon;
                    
                    // if it rains -> change the color of the button and disable it
                    if (day0 == 'rain'){
                        // if rain -> button lighten
                        document.getElementById("weatherBtn").style.background='#ffd500';
                        document.getElementById("weatherBtn").disabled = false;

                    }else{
                        document.getElementById("weatherBtn").style.background='#A9A9A9';
                        document.getElementById("weatherBtn").disabled = true;
                    }
                
                })
        }

        // when user click the 'bring umbrella btn' -> show the next 7 day temp forcast
        function tempForcast(latitude, longitude){
            const proxy = 'https://cors-anywhere.herokuapp.com/'
            const api = proxy+'https://api.darksky.net/forecast/5cdbb6801362ee38b81b258430c5f51c/'+latitude+","+longitude;
            fetch(api)
                .then(res =>{
                    //put result in json object
                    return res.json();
                })
                .then(data =>{
                    // [summary]
                    console.log(data)
                    // day 0
                    const day0High = data.daily.data[0].temperatureHigh;
                    const day0Low = data.daily.data[0].temperatureLow;
                    const day0temp = Math.round(((day0High+ day0Low)/2 -32)*5/9);   // convert all the temp to degree celcious
                    document.getElementById("day0Box").innerHTML = day0temp;

                    // day 1
                    const day1High = data.daily.data[1].temperatureHigh;
                    const day1Low = data.daily.data[1].temperatureLow;
                    const day1temp = Math.round(((day1High+ day1Low)/2 -32)*5/9);
                    document.getElementById("day1Box").innerHTML = day1temp;

                    // day 2
                    const day2High = data.daily.data[2].temperatureHigh;
                    const day2Low = data.daily.data[2].temperatureLow;
                    const day2temp = Math.round(((day2High+ day2Low)/2 -32)*5/9);
                    document.getElementById("day2Box").innerHTML = day2temp;

                    // day 3
                    const day3High = data.daily.data[3].temperatureHigh;
                    const day3Low = data.daily.data[3].temperatureLow;
                    const day3temp = Math.round(((day3High+ day3Low)/2 -32)*5/9);
                    document.getElementById("day3Box").innerHTML = day3temp;

                    // day 4
                    const day4High = data.daily.data[4].temperatureHigh;
                    const day4Low = data.daily.data[4].temperatureLow;
                    const day4temp = Math.round(((day4High+ day4Low)/2 -32)*5/9);
                    document.getElementById("day4Box").innerHTML = day4temp;

                    // day 5
                    const day5High = data.daily.data[5].temperatureHigh;
                    const day5Low = data.daily.data[5].temperatureLow;
                    const day5temp = Math.round(((day5High+ day5Low)/2 -32)*5/9);
                    document.getElementById("day5Box").innerHTML = day5temp;

                    // day 6
                    const day6High = data.daily.data[6].temperatureHigh;
                    const day6Low = data.daily.data[6].temperatureLow;
                    const day6temp = Math.round(((day6High+ day6Low)/2 -32)*5/9);
                    document.getElementById("day6Box").innerHTML = day6temp;

                    // day 7
                    const day7High = data.daily.data[7].temperatureHigh;
                    const day7Low = data.daily.data[7].temperatureLow;
                    const day7temp = Math.round(((day7High+ day7Low)/2 -32)*5/9);
                    document.getElementById("day7Box").innerHTML = day7temp;

                    // show tempDive
                    document.getElementById("tempDiv").style.display = 'block';
                
                })

        }

    </script>
</body>
</html>