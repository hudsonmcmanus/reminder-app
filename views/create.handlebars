<!DOCTYPE html>
<html lang="en">

<head>
	<title>Remindr</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css" />
	<link rel="stylesheet" type="text/css" href="/main.css" />
</head>

<body>
	{{> navbar-landing-page}}

	<div class="modal-fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" class="reminder">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content modal-fluid">
            <div class="modal-header">
                <h5 class="modal-title">Create New Reminder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" onclick="redirect()">&times;</span>
                </button>
            </div>
            <div class="modal-body fadeIn">
                {{#if error}}
					<b>{{error}}</b>
				{{/if}}
                <form id="reminderForm" action="/create" method="POST">
                    <div class="form-group">
                    <!--Get the title, description and date and time-->
                    <div class="form-group">
                        <input type="text" class="form-control" name="name" placeholder="Reminder Title">
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control" name="description" placeholder="Description">
                    </div>
                    <ul class='list-group' id="subtaskList">
                    </ul>
                    <input type="hidden" id="subtaskHidden" name="subtaskHidden">
                    <div class="form-group">
                        <input type="text" class="form-control" name="subtasks" placeholder="New Subtask" id="newSubtask">
                        <button type="button" onclick="addSubtask()">Add</button>
                    </div>

                    <div class='list-group' id="tagList">
                    </div>
                    <input type="hidden" id="tagHidden" name="tagHidden">
                    <div class="form-group" id="tag-container">
                        <input type="text" class="form-control" name="tags" placeholder="New Tag" id="newTag">
                         <button type="button" onclick="addTag()">Add</button>
                    </div>


                    <div class="form-check">
                        <label for="date">Remind Me On a Day</label>
                        <input id="datePicker" type="date" class="form-control" name="date">
                    </div>
                    <div class="form-check">
                        <label for="time">Remind Me At a Time</label>
                        <input id="timePicker" type="time" class="form-control" name="time">
                    </div>
                    <div class="modal-footer">

                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="redirect()">Close</button>
                        <button type="submit" id="submitForm" class="btn btn-primary">Submit</button>
                    </div>
                    </div>
                </form>
            </div>
        </div>
        </div>
    </div>

    <script
      src="https://code.jquery.com/jquery-3.4.1.min.js"
      integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
      crossorigin="anonymous"></script>
    <script>
        function redirect(){
            location.replace("/landing-page")
        }

        let subtaskArray = [];

        $(document).ready(function() {            
            // disable enter button submitting form for every text input
            $(document).on("keypress", 'form', function (e) {
                var code = e.keyCode || e.which;
                if (code == 13) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        let subtaskHidden = document.getElementById("subtaskHidden");
            
        let today = new Date();
        let time = today.getHours() + ":" + today.getMinutes();
        
        // setting the default date to be the current date
        document.getElementById('datePicker').valueAsDate = today;
        
        // setting the default time to be the current time
        document.getElementById("timePicker").defaultValue = time;
        
        // upon clicking add subtask button...
        function addSubtask(){
            let description = document.getElementById("newSubtask").value;
            let newSubtask = {completed: false, description: description};
            
            // add it to the array of subtask objects
            subtaskArray.push(newSubtask);

            // display it as a list on the html page
            subtaskDisplay(description); 

            // save it to the hidden input that will be eventually sent to router.js as a json string
            subtaskHidden.value = JSON.stringify(subtaskArray);

            // clearing out the previous input
            document.getElementById("newSubtask").value = "";
        }

        // display the list of subtasks that have been entered
        function subtaskDisplay(description) {
            // get the ul element
            let subtaskList = document.getElementById("subtaskList");
            
            // create an li element
            let li = document.createElement("li");
            li.setAttribute("class", "wordWrap list-group-item");       

            // add the description text to the li element
            li.appendChild(document.createTextNode(description));

            // append a delete button to the right side
            let deleteBtn = document.createElement("button");
            deleteBtn.type = "button";
            deleteBtn.setAttribute("class", "btn btn-secondary float-right");
            
            // when delete is clicked, remove from the html li, the subtaskArray, and also the subtaskHidden input
            deleteBtn.onclick = function() {
                subtaskList.removeChild(li);
                subtaskArray = subtaskArray.filter(function( obj ) {
                  return obj.description !== description;
                });
                subtaskHidden.value = JSON.stringify(subtaskArray);
            }
            deleteBtn.innerHTML = "delete";
            li.appendChild(deleteBtn);

            subtaskList.appendChild(li);
        }

        
        let tagArray = [];
        // upon clicking add subtask button...
        function addTag(){
            let description = document.getElementById("newTag").value;
            let newTag = description;
            
            // add it to the array of subtask objects
            tagArray.push(newTag);

            // display it as a list on the html page
            tagDisplay(description); 

            // save it to the hidden input that will be eventually sent to router.js as a json string
            tagHidden.value = JSON.stringify(tagArray);

            // clearing out the previous input
            document.getElementById("newTag").value = "";
        }

        // display the list of subtasks that have been entered
        function tagDisplay(description) {
            // get the ul element
            let tagList = document.getElementById("tagList");
            
            let li = document.createElement("div");
            li.setAttribute("class", "tag");

            let span = document.createElement('span')  ;     

            // add the description text to the li element
            span.appendChild(document.createTextNode(description));
            li.appendChild(span);

            // append a delete button to the right side
            let deleteBtn = document.createElement("i");
             deleteBtn.innerHTML = "[x]";
             deleteBtn.setAttribute("class", "'material-icons'");
            
            // when delete is clicked, remove from the html li, the subtaskArray, and also the subtaskHidden input
            deleteBtn.onclick = function() {
                tagList.removeChild(li);
                tagArray = tagArray.filter(function( obj ) {
                  return obj.description !== description;
                });
                tagHidden.value = JSON.stringify(tagArray);
            }
           
            li.appendChild(deleteBtn);

            tagList.appendChild(li);
        }
    </script>
</body>
</html>